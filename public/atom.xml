<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[The Technician]]></title>
  <link href="http://chr.ishenry.com/atom.xml" rel="self"/>
  <link href="http://chr.ishenry.com/"/>
  <updated>2015-03-31T23:43:10-04:00</updated>
  <id>http://chr.ishenry.com/</id>
  <author>
    <name><![CDATA[Chris Henry]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[When to do it yourself]]></title>
    <link href="http://chr.ishenry.com/2015/03/31/when-to-do-it-yourself/"/>
    <updated>2015-03-31T20:07:00-04:00</updated>
    <id>http://chr.ishenry.com/2015/03/31/when-to-do-it-yourself</id>
    <content type="html"><![CDATA[<p>Your time is extremely valuable, and execution of your product is everything.
When it comes to building out key pieces of infrastructure, the choice of
whether to build it, buy it, or use open source is very personal,
and depends on what the business really needs.</p>

<p>You do things yourself when you need fine grained control of a resource, or
require a deep understanding of a mission critical function. Can anyone do it
better than you can? Even if they can, do you have enough control in the
direction to get what you need? Does the time it takes to learn and execute in a
given domain warrant the value it provides? Or could that time be spent on
something else that would move the needle?</p>

<p>Dead giveaways are things the user sees. Design and product development can’t be
outsourced, nor can the actual execution of your product. Those stay in house,
no matter what. Your ability to find your voice and interact with your customers
is the thing that makes your product unique. If you cannot execute on your own
product, it&#8217;s a strong indication you&#8217;re not doing the right thing.</p>

<p>However, depending on your needs, there gets to be a long list of things that
aren’t your product, but are still critical to running your business. Campaign
and transactional email are great examples. Executing on mass email is extremely
difficult because of defenses put in place by major ISPs. You need an IP with a
good reputation, reverse DNS, a host that will allow massive amount of email to
leave it’s datacenter, and the list goes on and on.</p>

<p>There are also implicit supporting requirements of running a service that you
need to have but shouldn&#8217;t ever try to build. Project tracking, monitoring,
graphing, and alerting are all examples of components that have executed
extremely well by others, and can simply be turned on or deployed with minimal
effort on the part of your team.</p>

<p>In the end, what’s critical is spending your energy on the things that actually
create impact. Knowing the intersection of tradeoffs and priorities is what will
keep your team on the path that gets the job done.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Flight Status]]></title>
    <link href="http://chr.ishenry.com/2014/11/02/flight-status/"/>
    <updated>2014-11-02T16:13:00-05:00</updated>
    <id>http://chr.ishenry.com/2014/11/02/flight-status</id>
    <content type="html"><![CDATA[<p>A few weeks ago, I was stuck in an airport for a couple hours. I was flying to San Francisco, and upon arriving to JFK, was informed my flight would be delayed several hours due to a <a href="http://en.wikipedia.org/wiki/Ground_delay_program">ground delay program</a>. A ground delay program is put in place when a particular airport&#8217;s ability to keep up with traffic is diminished. If your destination airport has a program in place, your takeoff will be delayed until the destination recovers.</p>

<p>A ground delay program is the operations equivalent of shedding load. ATC essentially stops allowing inbound flights to take off to allow for the extra time and care it takes for en-route flights to land safely. This is very similar to <a href="http://techblog.netflix.com/2011/12/making-netflix-api-more-resilient.html">Netflix&#8217;s implementation of the CircuitBreaker pattern</a>, as it allows the resource having trouble to recover while keeping flights en route at a minimum.</p>

<p>While I was stuck, I found there&#8217;s a couple really neat tools that can tell you a little about your chances of getting there on time.</p>

<h4>FAA</h4>

<p>The FAA is kind enough to supply information on delays <a href="http://www.fly.faa.gov/flyfaa/usmap.jsp">here</a>. However, I found the information to be presented here a bit disingenuous. The map continued to show my destination airport as green, although flights were actually being held at departure points.</p>

<h4>FlightStats.com</h4>

<p><a href="http://www.flightstats.com">They</a> have a delay index where every destination airport is given a ranking of 0 through 5, 0 being totally on time, and 5 meaning go back to the airport bar and grab another beer. They also very helpfully track whether that index is trending up or down. These relate directly to how long a Ground Delay Program has been running. The longer that ground delay program runs, they more likely that index is going to going to trend up. They also provide a listing of flights to your destination airport that you can use to benchmark how delayed other flights and airlines are.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A Return]]></title>
    <link href="http://chr.ishenry.com/2014/09/12/a-return/"/>
    <updated>2014-09-12T19:48:00-04:00</updated>
    <id>http://chr.ishenry.com/2014/09/12/a-return</id>
    <content type="html"><![CDATA[<p>The past year has been an extremely busy one. There have been a number of challenges placed in front of me that were somewhat all-consuming. While there&#8217;s been plenty of introspection, much of it has been exceedingly private. My goal for the end of the year is to consider what I&#8217;ve learned in the past 9 or so months, and share it publicly. Wish me luck.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Inn on Randolph]]></title>
    <link href="http://chr.ishenry.com/2013/12/30/inn-on-randolph/"/>
    <updated>2013-12-30T17:13:00-05:00</updated>
    <id>http://chr.ishenry.com/2013/12/30/inn-on-randolph</id>
    <content type="html"><![CDATA[<p>This Christmas, <a href="http://sequinsandbobbypins.com/">Jessica</a> and I took a trip to Napa Valley. In the past year, I&#8217;ve taken quite a few trips out to California, but most of them have been helicopter trips for work. I&#8217;ve flown in, done what I needed to do, and flown out, as quickly as possible. These trips have been grueling, as they were designed to get me home quickly, and never allowed any time for relaxation. It seemed important to take a trip focused on getting to know an area.</p>

<p>We decided that we were going to spend a few days in Napa, so naturally, a B&amp;B was a great choice. We wanted to have breakfast provided, a bunch of other folks to chat with about life, and a warm, comfy place to call home for a couple days. We found the <a href="http://www.innonrandolph.com/">Inn on Randolph</a> via the Googlez, and were impressed by the comfortable looking rooms, so we booked. They offered a wine tour through <a href="http://www.platypustours.com/">Platypus Tours</a> so we booked it. It seemed like a good idea for 2 folks who haven&#8217;t been behind the wheel in years to not be behind the wheel and drinking. That&#8217;s about all the planning we did.</p>

<p>Upon arriving, we were greeted warmly, given freshly baked cookies and the lay of the land. Both Karen and Stacey were immensely knowledgeable about navigating Napa, and were able to recommend great places based on how we felt. What&#8217;s more, it seems the Inn on Randolph has taken advantage of a great network of wine makers, restaurateurs, and tasting rooms to provide a great experience. Each morning at breakfast, Karen or Stacey would ask if we had plans, and if not, could they help. On their recommendation, they booked us into amazing experiences. For wineries they couldn&#8217;t book us into, they provided tasting cards. Much of the value of staying at the Inn is the advice and access (read: free tastings) they provide. However, expect that to evaporate into wine purchases, as the recommendations will quickly turn into opportunities to buy very unique and delicious wines.</p>

<p>The Inn itself is gorgeous. It has a warm, comfortable palette of dark wood, grays, and cremes decorated with Victorian furniture. The Inn has also paid close attention to creature comforts that make for a truly relaxing stay away from home. The bathroom floors were heated, which makes the Inn the most luxuriant place I have ever stayed at. The beds were the kind that hug you and don&#8217;t let go, with heavy comforters that make it difficult to leave. (The only way I was able to get up was knowing my feet wouldn&#8217;t freeze on cold floors.)</p>

<p>All in all, this was an incredibly warm, comfortable way to spend a few days in wine country. The Inn aims to send folks to places that will educate and treat them well, and to provide a delightful place to roost at once they&#8217;re done.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Eggs Benedict and Burgers]]></title>
    <link href="http://chr.ishenry.com/2013/10/06/eggs-benedict-and-burgers/"/>
    <updated>2013-10-06T12:33:00-04:00</updated>
    <id>http://chr.ishenry.com/2013/10/06/eggs-benedict-and-burgers</id>
    <content type="html"><![CDATA[<p>Since moving to New York, and discovering that there are more restaurants per square mile than any other place in the world, I&#8217;ve started eating out a lot. A probably unhealthy amount. But that&#8217;s OK, because everyone&#8217;s got to eat, right? And after eating at lots of places, I&#8217;ve discovered that there are certain gold standard dishes that most places are beholden to. The two that I&#8217;ve focused on are Eggs Benedict, and the humble hamburger. These are two meals that are basic, but can be riffed on infinitely.</p>

<p>Eggs Benedict is arguably the more complex of the two, given <a href="http://www.youtube.com/watch?v=z3eLeDNK1fo">how hard it can be to poach a goddamn egg properly</a>. Also, since it&#8217;s a breakfast, a bad eggs benny can put a serious damper on your day. However, despite the whole poaching challenge, I&#8217;ve rarely seen it mangled. There&#8217;s even room for quite a bit of variance. A bit of apple cider vinegar in the water can impart a tangy flavor. A few seconds can make the difference between a completely liquid yolk and a more viscous one.  Then we get to the bread (soda bread being a unique standout, at <a href="http://wilfieandnell.com/">Wilfie and Nell</a>. This is the foundation of the dish, so it can really make or break it. For example, an overdone, rubbery English muffin can be so challenging to even the sharpest steak knife that you wind up shredding the whole meal. Breakfast should never be a workout. Hollandaise sauce is yet another canvas which can be painted on in endless ways. It accepts most seasonings surprisingly well. Dill is my favorite so far. Then you have the pig portion of the meal. Ham steak, streaky bacon, it&#8217;s all fair game.</p>

<p>The you have the burger, the old American stalwart. Again, super hard to screw up, but even harder to stand out. You also don&#8217;t have to wait in line at Umami Burger to get a good one. The blend of meat that goes into the patty (LaFrieda is king here), the cheese, bun all have a universe of possibilities. In my opinion, the more fat you start with in your meat, the better. Any burger that has short rib within 10 feet of it&#8217;s name is almost guaranteed to have a great flavor and texture. As pricy as it was, the $25 Black Label burger at <a href="http://www.minettatavernny.com/">Minetta Tavern</a> was really something special. The patty there was made of prime dry-aged neef cuts. The choice of caramelized onions was awesome, as was skipping the cheese, as the patty stood completely on its own. Cave aged cheddar, which <a href="http://peelsnyc.com/">Peels</a> employs, has made for a notable meal. And of course, the bun is there to keep your fingers (relatively) clean, or just fall apart. It doesn&#8217;t even have to be a traditional bun. <a href="http://whitmansnyc.com/">Whitman&#8217;s</a> makes a patty melt that comes between two slices of a Blue Ribbon Pullman loaf.</p>

<p>The best thing about these two dishes is that they&#8217;ll never get old. As long as restaurants keep experiments, coming and going, there&#8217;s always going to be an awesome variation!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[the wrong path]]></title>
    <link href="http://chr.ishenry.com/2013/09/03/the-wrong-path/"/>
    <updated>2013-09-03T22:26:00-04:00</updated>
    <id>http://chr.ishenry.com/2013/09/03/the-wrong-path</id>
    <content type="html"><![CDATA[<p>Robert Frost extolled the path not taken in his famous poem. It was a tribute to bucking the trend, and finding a place that was your own. In the go go go world of the tech industry, there are fewer paths untrodden, and many of them look wrong. And yet there are just as many reasons to go along those paths. Those reasons are specific to each context, and may look sunnier or darker depending on what lays along that path.</p>

<p>After seeing many of these paths, and knowing that each one looks different to everyone, the only way to truly determine the wrong path is to wholeheartedly walk down a path as if it were the right one. My favorite learning experiences have been when I pursued paths that seemed right, but were not. When determining the right path to take, sometimes the best thing to do is pick a path, walk down it, and see if you get where you need to go.</p>

<p>Here&#8217;s to walking down each path as if it were right.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What it feels like to be DDoS'ed]]></title>
    <link href="http://chr.ishenry.com/2013/07/29/what-it-feels-like-to-be-ddosed/"/>
    <updated>2013-07-29T23:02:00-04:00</updated>
    <id>http://chr.ishenry.com/2013/07/29/what-it-feels-like-to-be-ddosed</id>
    <content type="html"><![CDATA[<p>The internet is hostile. Not because of trolls or flame wars or your opinion on gay marriage, but because people want to destroy you. For absolutely no fucking reason. DDoS attacks are the scariest thing in the world to someone running a website.</p>

<p>The alerts will trickle in at first. It&#8217;ll just be a web sever or two that&#8217;s squawking. Then more. Then external monitoring will go off. Pingdom will mark you as down, a painful insult to your hard work, and numerous nines. Then all of the web servers will alert as down. And those alerts will keep coming. For a large infrastructure, potentially hundreds. You&#8217;ll have to quit email, or turn off notifications, or the cacophony of dings and vibrations will rattle around your brain and wrestle away whatever modicum of clarity you may have. SSH hangs, pings fail, your jump server gets squirrelly, and panic mounts. Tell your boss to get on chat. Don&#8217;t email, text, or call, because those channels will be fucked, occupied by automated alerts, hosting providers, vendors, and other team members.</p>

<!-- more -->


<p>Vendors might be confused because they can&#8217;t get to key pieces of infrastructure. That infrastructure and networking gear might be shared with others, which will freak everyone out more. If the attack is large enough, they may be experiencing the same feelings. You feel shitty, knowing this affected others, but you feel it later, because you can&#8217;t possibly feel more feelings. Hopefully your vendors have dealt with this before. Hopefully they know what they&#8217;re doing. Hopefully they&#8217;ll have an update in a few minutes. Hopefully that update won&#8217;t be that they null-routed your IP.</p>

<p>When the attack is several times larger than your subscribed bandwidth, service is denied. To your customers, to your team, and probably to upstream infrastructure. ISPs can&#8217;t, and sometimes wont, help. In fact, they&#8217;re likely to shun you. The dreaded null route, where there&#8217;s no hope of coming back up anytime soon. That&#8217;s the moment when there&#8217;s nothing you can do because the infrastructure leading to your environment has been overwhelmed.</p>

<p>A DDoS never happens at a convenient time. They happen late at night, during a team outing, or when you just took a sleeping pill, or have a major launch to contend with. The randomness is just another thing that makes you feel helpless, and ineffective. Impotent.</p>

<p>Once you&#8217;ve picked up the pieces, and mitigated, or waited it out, that&#8217;s when exhaustion comes. Or rage, then exhaustion. When and if you finally get to sleep the night after the attack, it&#8217;ll be fleeting. You&#8217;ll wake up often, check your phone, looking for alerts or a sign that it happened again. You&#8217;ll wake up early the next day, nowhere near rested, go back to the office and wait.</p>

<p>Incidents beg the question &#8220;who would do such a thing?&#8221;. Particularly when during your tenure, you&#8217;ve never done anything to hurt anyone, and  your service was designed to help people. Hell, even your competitors even respect you. The whole thing was birthed to help people, the little people, the people who always get taken advantage of. You love this site on some level, or you wouldn&#8217;t be part of the response. If you don&#8217;t love it, you at least feel a duty to protect it. If you don&#8217;t fall into either category, and are blissfully unaware, or asleep, you&#8217;re a either a prick or incompetent.</p>

<p>Once it&#8217;s over, you constantly fear they&#8217;ll come back. Thoughts and theories swirl about, unchecked. People will ask about the perpetrators, and you can only shrug, wearily. In the vacuum of facts, folks will supply their own theories. The conjecture about the attackers will be endless, the convo du jour.</p>

<ul>
<li>They did it for the lulz.</li>
<li>They were definitely Chinese.</li>
<li>They did because they had a botnet and nothing better to do.</li>
<li>They did it because they hate our guts.</li>
<li>It&#8217;s an Eastern European douchebag.</li>
<li>There was a guy who called into support and was pissed, I bet it was him.</li>
<li>They did it because they want to hurt someone who&#8217;s using the service.</li>
<li>They targeted you because of who you&#8217;re working with.</li>
<li>It&#8217;s some fat slob asshole who lives in his mother&#8217;s basement and he didn&#8217;t get any meatloaf.</li>
<li>It was Prism.</li>
</ul>


<p>Conjecture is useless. The attacker doesn&#8217;t have a face. And even if it does, it&#8217;s extremely unlikely you&#8217;ll ever see it. The sad fact is that there will be no Liam Neeson Taken-style vengeance. You won&#8217;t suddenly appear on another continent, infiltrate their lair, and punch their teeth down their throat. No matter how bad you may want to.</p>

<p>When you get into the office again, you&#8217;ll likely be hailed as a hero. After all, you &#8220;fought the hackers.&#8221; Deep down, even after you got everything back in place, you still feel a little bit like a failure, because it happened at all. You take the congratulations sheepishly, through bleary eyes, deathly afraid of the next attack.</p>

<p>Pragmatically, most of your energy should be focused on things like re-ip&#8217;ing your web site. Engaging with hosting providers to get mitigation services in place, talking directly to mitigation experts to see what help they can be, analyzing the attack to see if there are ports that can be closed to an attacker completely, fixing your application to handle the closing of ports that were attacked on, standing up services to get around ports being closed, altering your application to gather inputs in a more intelligent way after the hacks that were put in place assuming there would never be any serious infrastructure changes made without seriously considering them first.</p>

<p>You have a lot of work to do.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RSS Resolution, and Blog Updates]]></title>
    <link href="http://chr.ishenry.com/2013/06/30/blog-updates/"/>
    <updated>2013-06-30T20:40:00-04:00</updated>
    <id>http://chr.ishenry.com/2013/06/30/blog-updates</id>
    <content type="html"><![CDATA[<p>After much neglect, and a few insane weeks, I&#8217;ve finally gotten the time to update a few things in my daily toolkit. First, RSS; I&#8217;ve decided to go all in with <a href="http://www.feedly.com" target="_blank">Feedly</a>. I&#8217;ve found it to be a great cross-platform candidate that&#8217;s had to deal with a <a href="http://blog.feedly.com/2013/06/21/summary-of-the-last-100-days/">lot of scaling challenges</a> in a very, very short period of time. I give them a lot of credit for building a massive platform and being able to continue to add features to what looks like a web app with great potential. At the moment, my only real gripe would be a progress indicator in the browser of the iOS app.</p>

<!-- more -->


<p>Secondly, I&#8217;ve made a few small updates to this very site. Since Twitter has deprecated v1 of their API, which the <a href="http://octopress.org">Octopress</a> supplied twitter widget depends on, has crapped out. Since I&#8217;ve been all about minimalism lately, it seemed appropriate to simply pull the plug on it. That decision led me down the rabbit hole of how to update Octopress themes. (Hint: if you are using a theme, and you edit sass and html files in source, <a href="http://i95.photobucket.com/albums/l142/gstatejester/02-youre-doing-it-wrong.jpg?t=1285658433" target="_blank">you&#8217;re doing it wrong</a>.) That revelation led me to forking the venerable <a href="https://github.com/tommy351/Octopress-Theme-Slash">Slash</a> Octopress theme. <a href="https://github.com/chrishenry/Octopress-Theme-Slash">My own fork</a> loses the Twitter feed, narrows the layout a bit, and adds an Add to Feedly link.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GReader is going away, and I'm not that sad]]></title>
    <link href="http://chr.ishenry.com/2013/06/09/greader-is-going-away/"/>
    <updated>2013-06-09T13:15:00-04:00</updated>
    <id>http://chr.ishenry.com/2013/06/09/greader-is-going-away</id>
    <content type="html"><![CDATA[<p>There was a period where I was insanely into RSS. It was what I did every time I sat down at the computer. I fired up the Google Reader tab, and spent hours in there. I pored over everything, and it was a really fun game to try and get through everything and still retain at least one useful piece of information from my frenzied filtering. That was usually the case, as at that time, I had a pretty tightly curated list of feeds.</p>

<!-- more -->


<p>Then Twitter came along. I was quite the naysayer of Twitter when it came out, dismissing it as a fad. But I got caught up, just like most people. It was a lot of fun sharing small bits of stuff, and forced me to distill a thought down into 140 characters. It gave me insight into smart people and what they were thinking about. But most importantly, I started using it as my reading list. It was easier to let others pick out the good stuff, and then scan through to find the stuff I thought was relevant to me. Quickly, favorites list became my reading list.</p>

<p>I did, however, switch everything over to <a href="http://www.feedly.com/index.html">Feedly</a> this morning. What I realized is that my list of feeds has become completely unmanageable. I actually broke their UI trying to organize everything. (Not sure if it&#8217;s their fault or mine.) The biggest problem is that I would randomly add feeds after seeing a single post, and many times there was nothing else helpful in the feed. Or worse, the feed is completely dead. In order for RSS to be useful, it seems like a feed has to be active to make it&#8217;s way to in front of my eyeballs. So I got rid of a lot of feeds that had no posts since my last visit to GReader.</p>

<p>This experience has made me doubt the future of RSS Readers as a scalable solution for consuming information. While I&#8217;ll be giving Feedly a fair shot, I wonder how if I&#8217;ll actually be opening it up every day, as opposed to going to Twitter favorites.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Making Decisions with Graphite]]></title>
    <link href="http://chr.ishenry.com/2013/05/05/making-decisions-with-graphite/"/>
    <updated>2013-05-05T21:01:00-04:00</updated>
    <id>http://chr.ishenry.com/2013/05/05/making-decisions-with-graphite</id>
    <content type="html"><![CDATA[<p>The DevOps mentality of &#8220;measure everything&#8221; can be really helpful in key moments when you need to make decisions. In particular, deploying two things side by side for the purposes of measurement can yield super helpful decision making information. For example, the Behance team was wanted to see how <a href="http://php.net/manual/en/book.apc.php">APC</a> stacked up against <a href="http://pecl.php.net/package/ZendOpcache">Zend Opcode Cache</a>.</p>

<!-- more -->


<p>Behance has been running APC for several years, and we&#8217;ve been pretty happy with it. There&#8217;s the typical pain, usually in unexplainable segfaults, that comes with upgrades. However, with the most recent upgrade to PHP 5.4, the segfaults got a bit out of hand. After some investigation, it turned out that APC was on it&#8217;s way out, and we should probably consider other opcode caches. However, as a rightly skeptical team, we wanted to thoroughly vet any alternative thoroughly. APC has been good to us, from a performance standpoint, and we needed to make sure that anything we changed to was as good or better.</p>

<p>For a baseline, we were already measuring performance using <a href="http://chr.ishenry.com/2013/04/01/first-byte/">mod_log_firstbyte</a> and kicking its output to <a href="https://github.com/etsy/statsd/">statsd</a> with a <a href="http://graphite.wikidot.com/">Graphite</a> frontend. Once we confirmed that Zend actually worked with our app (not in production), we reconfigured one of our production web heads to use it. Luckily, our segfaults stopped, which was a fantastic sign. However, to satisfy our performance requirement, we needed some hard numbers.</p>

<p>Graphite has a really great <a href="http://graphite.readthedocs.org/en/0.9.10/render_api.html">API</a> that allows you to slice and dice your data in really helpful ways. Since we were interested in comparing two data series (the newly configured server, and any older server), we were able to use the <a href="http://graphite.readthedocs.org/en/0.9.10/functions.html#graphite.render.functions.diffSeries">diffSeries function</a> to graph the comparison between the two datasets, like so, and produced a graph like below.</p>

<blockquote><p>diffSeries(stats.timers.stat_thats_likely_to_be_higher, stats.timers.stat_thats_likely_to_be_lower)</p></blockquote>

<p><img src="http://chr.ishenry.com/images/user/diffseries.png" alt="diffSeries graph" /></p>

<p>Since there&#8217;s some math involved, this isn&#8217;t the most straightforward graph to read. There are 3 patterns that emerge from using this function;</p>

<ul>
<li>If both series are equal, then it will produce a graph that hovers around 0.</li>
<li>If the second series is consistently lower, then the graph will be consistently > 0.</li>
<li>If the first series is consistently lower, then the graph will be consistently &lt; 0.</li>
</ul>


<p>In the case of our example, we saw a graph that was consistently above 0. This meant that Zend Opcode cache was consistently faster, to the tune of 5-10ms. Knowing that we had solved the segfaults problem, and knowing that Zend was statistically faster, the choice was super simple.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Policy Fallacy]]></title>
    <link href="http://chr.ishenry.com/2013/04/14/policy-fallacy/"/>
    <updated>2013-04-14T19:05:00-04:00</updated>
    <id>http://chr.ishenry.com/2013/04/14/policy-fallacy</id>
    <content type="html"><![CDATA[<blockquote><p>&#8220;The Navy is a master plan designed by geniuses for execution by idiots. If you&#8217;re not an idiot, but find yourself in the Navy, you can only operate well by pretending to be one.&#8221;
-Herman Wouk, The Caine Mutiny</p></blockquote>

<p>The worst arguments I&#8217;ve ever had were with people who weren&#8217;t willing to bend on policy in situations where the policy made no sense. Context is everything, and most policy is made for a situation that has likely come and gone.</p>

<p>People with judgment will recognize this, especially in the context of running startups. Hopefully, they were the same person that made the original policy, and can see that things have changed. Smart companies have fewer policies, implicitly trusting their teams to make the right decision.</p>

<p><a href="http://www.slideshare.net/HubSpot/the-hubspot-culture-code-creating-a-company-we-love" title="Culture Code: Creating A Lovable Company" target="_blank"><img src="http://image.slidesharecdn.com/culturecode-v7-130320111259-phpapp02/95/slide-62-638.jpg?1366572567" /></a></p>

<p><a href="http://www.slideshare.net/HubSpot/the-hubspot-culture-code-creating-a-company-we-love">Culture Code: Creating A Lovable Company</a> </strong> from <strong><a href="http://www.slideshare.net/HubSpot" target="_blank">HubSpot All-in-one Marketing Software</a></strong></p>

<p>The takeaway here is that you can judge organizations and people based on how beholden they are to policy. Smart ones let you make smart decisions.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[First Byte]]></title>
    <link href="http://chr.ishenry.com/2013/04/01/first-byte/"/>
    <updated>2013-04-01T23:29:00-04:00</updated>
    <id>http://chr.ishenry.com/2013/04/01/first-byte</id>
    <content type="html"><![CDATA[<p>As we all may have some idea of at this point, performance on the web is one of the keys to success. However, finding actionable performance metrics can be a challenge. In the course of a web request, there&#8217;s a lot of stuff that happens. I&#8217;ll briefly explain it here in a couple run-on sentences.</p>

<p>When you click on a link, your browser or client looks up the location of the server via DNS, and then sends off an HTTP request, then your poorly secured router passes it on to the demons that are your local ISP, who then fiendishly pass that same request up to a backbone, which then traverses continents, oceans or even hemispheres, finally arriving at the data center or poorly ventilated closet where the web servers for that particular site live. That web server reads in that request for your stuff (probably porn, you sicko), and begins whatever its process may be to assemble the initial HTML payload, which hopefully involves validating that the way you asked for said stuff is correct, and if it is, then connecting to a database to actually get that lovely stuff, receiving a response, and puts together an HTML page with that data on it, plus references (more on those later) to CSS and JS to format the data in a way that makes sense, and even make it look a little purty. After that exhausting operation, the web server will take the opposite route through the backbone to the succubus ISP, through your router to your computer to your browser. Once that happens, you technically only have the payload HTML, which by itself isn&#8217;t a whole lot of fun, so then the browser will read aforementioned references to CSS and JS, and then make web requests for each of those files, which, btw, will follow the same process as the initial HTML payload went through, until you have all of the CSS and JS. Then you can finally improve your mind by thoughtfully reflecting on the highly intellectual prose you requested not too long ago.</p>

<!-- more -->


<p>The point of all those horribly structured sentences in the context of web performance is that a web request will often spend more time being passed around various routers than actually being processed on a web server. Therefore, the act of measuring an entire web request is a fool&#8217;s errand, since you&#8217;re only measuring lots of things that you as a web developer don&#8217;t have any control over. In reference to my poorly written story, the only bit that you can actually change is the time when the web request is in the poorly ventilated closet, being parsed, processed, retrieved, and put together by the web server.</p>

<p>Therefore, one of the most important measurements to be recorded is the time it actually takes from when a request is received to when the server has started sending the complete result back to the client. Working on a standard LAMP (P being PHP) stack, there is no way that I&#8217;m aware of to do this out of the box. One way is to inject code into your app that will measure this, or to use a framework where this sort of functionality is built in. However, IMHO, that&#8217;s not the best approach, as it&#8217;s just more code that needs to be written, maintained, and could possibly explode in some strange way, affecting your users.</p>

<p>The approach that I&#8217;ve taken to measuring response times on the server is to use a somewhat obscure Apache module called <a href="https://code.google.com/p/mod-log-firstbyte/">mod_first_byte</a>. It&#8217;s surprisingly easy to install and run, and having run it for several weeks, I haven&#8217;t seen any performance issues or other oddities. Here&#8217;s a quick example of how to install it.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># make a suitable folder to hold the source</span>
</span><span class='line'><span class="nv">install_dir</span><span class="o">=</span>mod_firstbyte
</span><span class='line'>mkdir <span class="nv">$install_dir</span>
</span><span class='line'>
</span><span class='line'><span class="c"># svn checkout the source into the install_dir</span>
</span><span class='line'>svn checkout http://mod-log-firstbyte.googlecode.com/svn/trunk/ <span class="nv">$install_dir</span>
</span><span class='line'>
</span><span class='line'><span class="c"># depending on your linux flavor, you&#39;ll need a different program to compile</span>
</span><span class='line'><span class="k">if</span> <span class="o">[</span> -f /etc/issue <span class="o">]</span>
</span><span class='line'>  <span class="k">then</span>
</span><span class='line'><span class="k">  </span><span class="nv">distro</span><span class="o">=</span><span class="s1">&#39;ubuntu&#39;</span>
</span><span class='line'>  <span class="nv">apache_apxs</span><span class="o">=</span><span class="s1">&#39;apxs2&#39;</span>
</span><span class='line'>  <span class="nv">apache_conf</span><span class="o">=</span><span class="s1">&#39;/etc/apache2/apache2.conf&#39;</span>
</span><span class='line'><span class="k">fi</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="o">[</span> -f /etc/redhat-release <span class="o">]</span>
</span><span class='line'>  <span class="k">then</span>
</span><span class='line'><span class="k">  </span><span class="nv">distro</span><span class="o">=</span><span class="s1">&#39;redhat&#39;</span>
</span><span class='line'>  <span class="nv">apache_apxs</span><span class="o">=</span><span class="s1">&#39;apxs&#39;</span>
</span><span class='line'>  <span class="nv">apache_conf</span><span class="o">=</span><span class="s1">&#39;/etc/httpd/httpd.conf&#39;</span>
</span><span class='line'><span class="k">fi</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c"># Use the weird apache command to compile and install the apache mod</span>
</span><span class='line'><span class="nv">$apache_apxs</span> -c     <span class="nv">$install_dir</span>/mod_log_firstbyte.c
</span><span class='line'><span class="nv">$apache_apxs</span> -i -a  <span class="nv">$install_dir</span>/mod_log_firstbyte.la
</span></code></pre></td></tr></table></div></figure>


<p>Now that you&#8217;ve complied the module into an so file, you&#8217;ll need to add it to the apache conf. While you&#8217;re in there, you&#8217;ll also want to add the %F directive to your relevant LogFormat lines. Again, adjust for Linux flavor, and LogFormat preferences.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='apache'><span class='line'><span class="nb">LoadModule</span> log_firstbyte_module <span class="sx">/path/to/apache/modules/mod_log_firstbyte.so</span>
</span><span class='line'>
</span><span class='line'><span class="nb">LogFormat</span> <span class="s2">&quot;%h %l %u %t \&quot;%r\&quot; %&gt;s %b %F&quot;</span> common
</span></code></pre></td></tr></table></div></figure>


<p>For ease of parsing, I recommend putting the %F flag at the end. I&#8217;ve been using a simple php script that runs every few seconds to grep for the last couple lines that have URLs I&#8217;m interested in measuring, pulling the %F off the end of the line, and then sending the value off to <a href="https://github.com/etsy/statsd/">statsd</a>. Keep in mind that the value of %F is in microseconds, so dividing the value by 1000 to give a more reasonable number is helpful.</p>

<p>My script looks a bit like this. What I&#8217;m attempting to do is exclude anything that seems like it&#8217;s a flat file, and only include URLs that are generated by going through my application. YMMV, depending on what your application is and what you want to measure exactly.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">$log_lines  = array();</span>
</span><span class='line'><span class="x">$cmd        = &quot;tail -n 50 /var/log/httpd/access_log | egrep -v \&quot;css|js|gif|png|jpg|jpeg\&quot;;</span>
</span><span class='line'><span class="x">$statsd_key = &quot;first_byte&quot;;</span>
</span><span class='line'>
</span><span class='line'><span class="x">exec( $cmd, $log_lines );</span>
</span><span class='line'>
</span><span class='line'><span class="x">foreach ( $log_lines as $line ) {</span>
</span><span class='line'><span class="x">  </span>
</span><span class='line'><span class="x">  $line_items = explode( &#39; &#39;, $line );</span>
</span><span class='line'>
</span><span class='line'><span class="x">  $firstbyte = $line_items[ count($line_items) - 1 ];</span>
</span><span class='line'>
</span><span class='line'><span class="x">  $firstbyte_ms = ceil( ( $firstybyte / 1000 ) );</span>
</span><span class='line'>
</span><span class='line'><span class="x">  StatsD::timing( $statsd_key, $firstybyte_ms );</span>
</span><span class='line'>
</span><span class='line'><span class="x">} // foreach log lines</span>
</span></code></pre></td></tr></table></div></figure>


<p>And voilà, you now have some very revealing graphs that will tell you exactly your app is performing, completely separate of how the hellion ISPs have decided to perform that moment. My favorite thing about these graphs is that they are an unopinionated view of how the last changes you&#8217;ve made have affected your app.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AppArmor, Ubuntu and MySQL]]></title>
    <link href="http://chr.ishenry.com/2013/03/08/apparmor-and-mysql/"/>
    <updated>2013-03-08T22:46:00-05:00</updated>
    <id>http://chr.ishenry.com/2013/03/08/apparmor-and-mysql</id>
    <content type="html"><![CDATA[<p>The other night I was investigating a rather heinous utf8 issue. I was working on a local copy of Ubuntu 12.04 that contained the entire dev environment, except for data. So I exported a copy of the relevant data as a CSV, pulled it down, and attempted to run a <code>LOAD DATA INFILE</code>. Sane enough right? This is something I&#8217;ve done a million times in a bunch of different environments. However, in the vast, vast majority of cases, the error is typically pretty clear. In this case, not so much.</p>

<!-- more -->


<p>The error here was;</p>

<blockquote><p>ERROR 29 (HY000): File &#8216;/home/technician/data.csv&#8217; not found (Errcode: 13)</p></blockquote>

<p>I&#8217;ve been known to have short term memory glitches, so I exited mysql and double checked my path. Three times. After jumping in and out of the mysql shell, I figured there must have been some sort of issue with the placement or permissions of file. Perhaps mysql simply isn&#8217;t allowed to read the file from there. So I moved it over to the /tmp folder. Ubuntu allows everyone to read from there. No dice. So I moved it back to someplace that made sense and chown&#8217;ed it to mysql:mysql still no dice. It was simply as if mysql couldn&#8217;t see the file.</p>

<p>After quite a bit of googling, it turns out a program called AppArmor was blocking mysql&#8217;s access to the filesystem. From the <a href="https://help.ubuntu.com/12.04/serverguide/apparmor.html">AppArmor Wiki</a>;</p>

<blockquote><p>AppArmor is a Linux Security Module implementation of name-based mandatory access controls. AppArmor confines individual programs to a set of listed files and posix 1003.1e draft capabilities.</p></blockquote>

<p>As it turns out, I&#8217;m not the <a href="https://bugs.launchpad.net/ubuntu/+source/mysql-dfsg-5.0/+bug/244406">only</a> <a href="http://ubuntuforums.org/archive/index.php/t-822084.html">one</a> <a href="http://stackoverflow.com/questions/2783313/how-can-i-get-around-mysql-errcode-13-with-select-into-outfile">who</a> had issues with this piece of software. Like any good piece of software fighting the good security fight, it gives <a href="http://en.wikipedia.org/wiki/No_quarter">no quarter</a>, intentionally obfuscating the exact error. For Ubuntu, this is pretty strange behavior. Typically, things in Ubuntu just work, and there aren&#8217;t too many gotchas.</p>

<p>After a bit more Googling, the solution was relatively simple. AppArmor operates by reading in profiles for each piece of software that it monitors. Those profiles have two modes of execution, <a href="https://help.ubuntu.com/8.04/serverguide/apparmor.html">per the docs</a>.</p>

<blockquote><ul>
<li>Complaining/Learning: profile violations are permitted and logged. Useful for testing and developing new profiles.</li>
<li>Enforced/Confined: enforces profile policy as well as logging the violation.</li>
</ul>
</blockquote>

<p>So the only thing we actually have to do to get mysql back in a place where it&#8217;s working as expected is to run the following.</p>

<blockquote><p>$ sudo aa-complain /usr/bin/mysql</p></blockquote>

<p>It&#8217;s great that Ubuntu has enabled this by default, and taken a great step in being secure. However, it feels too heavy handed.</p>

<p>Hope this helps someone!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Resignation and Continuity]]></title>
    <link href="http://chr.ishenry.com/2013/02/21/resignation-and-continuity/"/>
    <updated>2013-02-21T20:19:00-05:00</updated>
    <id>http://chr.ishenry.com/2013/02/21/resignation-and-continuity</id>
    <content type="html"><![CDATA[<p>I&#8217;ve always believed that the Church is more a political entity than a faithful one. Ever since my sister&#8217;s Confirmation, when there were three collections, and the sermon admonished parents that every firstborn should be sent to seminary, I have been convinced that church and faith are entirely separately. Reading through history, it&#8217;s clear the papacy is more of a political organization than anything else. The wars, the influence over entire countries to go to war seem more the actions of an organization obsessed with power than one that existed to help people.</p>

<!-- more -->


<p>With Ratzinger bucking the trend of holding the papacy till death, it is even more clear that what should be the peaceful fading away of an old man who has done his service will be turned into political jockeying. One of the more interesting political side effects of Ratzinger&#8217;s decision to resign will be that he will continue to influence the policies of the church until his death.</p>

<p>The new Pope will be in a much different position from previous popes, who had free reign to set policy as he sees. In this case, there will be Ratzinger&#8217;s supporters and the ex-pope himself around to ensure that edicts put in place will stay there. Unlike previous new popes, there will be no clean break in policy. The man who is now closest to God among all other men will be within a stone&#8217;s throw of the man who was closest to God a couple months ago.</p>

<p>The question here will be whether the papacy can continue to move forward with, or will the previous pope continue to be pope. Much like an an employee who suddenly sits up straight and closes the Facebook window when the boss walks in, will the future pope be influenced by the unspoken power dynamic of having a previous pope alive?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Switching to Octopress]]></title>
    <link href="http://chr.ishenry.com/2013/02/09/switching-to-octopress/"/>
    <updated>2013-02-09T16:08:00-05:00</updated>
    <id>http://chr.ishenry.com/2013/02/09/switching-to-octopress</id>
    <content type="html"><![CDATA[<p>Last month, I decided to refresh my blogging platform. My Wordpress was old and busted, and working on it didn&#8217;t quite fit with the way I wanted to work. I tried tumblr for a few weeks, but it felt pretty constraining. Overall, I was looking for a platform that gave me control, and the ability to crack open the source and do what I wanted.</p>

<!-- more -->


<p>Overall, here were the features I was looking for</p>

<ul>
<li>Display code beautifully, right off the bat.</li>
<li>Add plugins. Maybe even write them myself.</li>
<li>Be able to have all my content organized how I want.</li>
</ul>


<p><a href="http://octopress.org">Octopress</a> was a perfect fit. Working with git, the command line, and markdown are all things that are very familiar to me. There&#8217;s a great community around it, and enough open development around it to support most of the things I want to do. And if the community hasn&#8217;t built it yet, then I can certainly give it a try myself.</p>

<p>The docs on the <a href="http://octopress.org/docs/setup/">Octopress</a> site are really good. Aside from the typical challenges of upgrading Ruby on Mac. <a href="http://www.macports.org/">MacPorts</a> was extremely helpful with the upgrade to Ruby 1.9.3.  Also, the provisioning of a Heroku dyno, and the deploy was as close to painless as it gets.</p>

<p>The migration, however, was not quite as simple. I had plenty of trouble getting my content into tumblr, and I also had a bit of trouble getting it out. Tom Preston-Warner&#8217;s <a href="https://github.com/mojombo/jekyll/wiki/blog-migrations">github wiki</a> was very helpful. However, be aware that the default ruby gems are a little out of date, and the information <a href="https://github.com/mojombo/jekyll/issues/773">this resolved issue</a> helped get around the trouble.</p>

<p>Once the posts were actually imported, there still needed to be a bit of massaging done to get them into shape. The yaml header was using tags instead of categories. In the source/_posts folder, a quick sed command got me what I wanted.</p>

<figure class='code'><figcaption><span>Sed snippet  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>  <span class="nv">$ </span>sed -i <span class="s1">&#39;&#39;</span> <span class="s1">&#39;s/^tags/categories/&#39;</span> *
</span></code></pre></td></tr></table></div></figure>


<p>I do miss my old Wordpress blog, but it was definitely time for a change, as that had been my blog for years. Setting up Octopress has been a great experiment in looking at another language (ruby, and some python), getting more familiar with git, and getting even more acquainted with SublimeText.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[app.net community]]></title>
    <link href="http://chr.ishenry.com/2013/02/09/appnet-community/"/>
    <updated>2013-02-09T12:08:00-05:00</updated>
    <id>http://chr.ishenry.com/2013/02/09/appnet-community</id>
    <content type="html"><![CDATA[<p>The community of app.net is certainly steadfast in their defense of what makes
a great online community, and super eloquent in some cases.</p>

<p><img src="http://chr.ishenry.com/images/user/appnet.png" alt="Community leaders" /></p>

<p>They&#8217;re also not real open to the idea they <a href="https://alpha.app.net/radrad/post/2738575">might be
wrong</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Purpose]]></title>
    <link href="http://chr.ishenry.com/2013/02/07/if-you-simply-ask-a-programmer-to-implement-a-feature-but-fail-to-share-the-purpose-or-the-justification-for-said-feature-all-you-get-is-a-code-monkey-code-monkeys-merely-translate-requirements-into-co/"/>
    <updated>2013-02-07T00:00:00-05:00</updated>
    <id>http://chr.ishenry.com/2013/02/07/if-you-simply-ask-a-programmer-to-implement-a-feature-but-fail-to-share-the-purpose-or-the-justification-for-said-feature-all-you-get-is-a-code-monkey-code-monkeys-merely-translate-requirements-into-co</id>
    <content type="html"><![CDATA[<blockquote><p>If you simply ask a programmer to implement a feature, but fail to share the
purpose or the justification for said feature, all you get is a code monkey.
Code monkeys merely translate requirements into code verbatim. There’s no room
to trade concessions with the designers if I don’t know what you’re trying to
do.</p></blockquote>

<p>&#8211;<a href="http://37signals.com/svn/posts/3392-humans-need-to-know-why">http://37signals.com/svn/posts/3392-humans-need-to-know-why</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Airport Security at it’s finest.]]></title>
    <link href="http://chr.ishenry.com/2013/02/03/airport-security-at-its-finest/"/>
    <updated>2013-02-03T00:00:00-05:00</updated>
    <id>http://chr.ishenry.com/2013/02/03/airport-security-at-its-finest</id>
    <content type="html"><![CDATA[<p><img src="http://chr.ishenry.com/images/user/jfk_security.png" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RWW's New Design]]></title>
    <link href="http://chr.ishenry.com/2013/01/31/readwritewebs-new-design-of-articles-pages-is-just-an-unpleasant-and-overwhelming-barrage-of-text-and-its-mostly-text-im-not-interested-in-readingtheyve-done-a-great-of-job-of-making-scrolling-distract/"/>
    <updated>2013-01-31T00:00:00-05:00</updated>
    <id>http://chr.ishenry.com/2013/01/31/readwritewebs-new-design-of-articles-pages-is-just-an-unpleasant-and-overwhelming-barrage-of-text-and-its-mostly-text-im-not-interested-in-readingtheyve-done-a-great-of-job-of-making-scrolling-distract</id>
    <content type="html"><![CDATA[<p>ReadWriteWeb’s new design of articles pages is just an unpleasant and overwhelming
barrage of text. And it’s mostly text I’m not interested in reading.</p>

<p>They’ve done a great of job of making scrolling distracting, by ensuring that all
the content that you don’t want to see (related links, blogroll) does something
you don’t expect.</p>

<p><img src="http://chr.ishenry.com/images/user/rww_appnet.png" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rigoletto]]></title>
    <link href="http://chr.ishenry.com/2013/01/29/rigoletto/"/>
    <updated>2013-01-29T00:00:00-05:00</updated>
    <id>http://chr.ishenry.com/2013/01/29/rigoletto</id>
    <content type="html"><![CDATA[<p>From the <a href="http://www.wqxr.org/#!/blogs/operavore/2013/jan/29%0A/review-metropolitan-operas-rat-pack-rigoletto-hits-jackpot/">WQXR review</a> of Rigoletto at
the Met</p>

<blockquote><p>As much as Verdi has resisted updating, his tale of a nasty hunchback court
jester whose daughter is killed by his own need for revenge arrived here in
the early-&#8217;80s as a gangster movie courtesy of Jonathan Miller and the
visiting English National Opera. More recently in Wales, the Duke of Mantua&#8217;s
decadent court became the Oval Office. Mayer&#8217;s production did everything that
a Las Vegas setting threatens to do — colors never seen in nature, pole
dancing, glitzy satellite chandeliers (not unlike the Met&#8217;s) and even Met
titles with modern English colloquialism. Some wondered aloud why the
translation even bothered to keep names like &#8220;Duke.&#8221; Why not Frank and Sammy?</p></blockquote>

<p>Having never experienced an Opera before, and not knowing anything about the
plot of Rigoletto other than what I read in Playbill, the modern setting and
translation went a long way in helping me understand Verdi. In general, the
few productions I&#8217;ve seen in the past few years have had odd elements
alongside original text that seemed to have been put there to soften the
harshness of unfamiliar colloquialisms. Superhero costumes in Shakespeare, and
even the staging of Rigoletto help to make this otherwise stuffy content
accessible.</p>
]]></content>
  </entry>
  
</feed>
