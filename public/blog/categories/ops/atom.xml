<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ops | The Technician]]></title>
  <link href="http://chr.ishenry.com/blog/categories/ops/atom.xml" rel="self"/>
  <link href="http://chr.ishenry.com/"/>
  <updated>2015-06-27T15:12:16-04:00</updated>
  <id>http://chr.ishenry.com/</id>
  <author>
    <name><![CDATA[Chris Henry]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[When to do it yourself]]></title>
    <link href="http://chr.ishenry.com/2015/03/31/when-to-do-it-yourself/"/>
    <updated>2015-03-31T20:07:00-04:00</updated>
    <id>http://chr.ishenry.com/2015/03/31/when-to-do-it-yourself</id>
    <content type="html"><![CDATA[<p>Your time is extremely valuable, and execution of your product is everything.
When it comes to building out key pieces of infrastructure, the choice of
whether to build it, buy it, or use open source is very personal,
and depends on what the business really needs.</p>

<p>You do things yourself when you need fine grained control of a resource, or
require a deep understanding of a mission critical function. Can anyone do it
better than you can? Even if they can, do you have enough control in the
direction to get what you need? Does the time it takes to learn and execute in a
given domain warrant the value it provides? Or could that time be spent on
something else that would move the needle?</p>

<p>Dead giveaways are things the user sees. Design and product development can’t be
outsourced, nor can the actual execution of your product. Those stay in house,
no matter what. Your ability to find your voice and interact with your customers
is the thing that makes your product unique. If you cannot execute on your own
product, it's a strong indication you're not doing the right thing.</p>

<p>However, depending on your needs, there gets to be a long list of things that
aren’t your product, but are still critical to running your business. Campaign
and transactional email are great examples. Executing on mass email is extremely
difficult because of defenses put in place by major ISPs. You need an IP with a
good reputation, reverse DNS, a host that will allow massive amount of email to
leave it’s datacenter, and the list goes on and on.</p>

<p>There are also implicit supporting requirements of running a service that you
need to have but shouldn't ever try to build. Project tracking, monitoring,
graphing, and alerting are all examples of components that have executed
extremely well by others, and can simply be turned on or deployed with minimal
effort on the part of your team.</p>

<p>In the end, what’s critical is spending your energy on the things that actually
create impact. Knowing the intersection of tradeoffs and priorities is what will
keep your team on the path that gets the job done.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Flight Status]]></title>
    <link href="http://chr.ishenry.com/2014/11/02/flight-status/"/>
    <updated>2014-11-02T16:13:00-05:00</updated>
    <id>http://chr.ishenry.com/2014/11/02/flight-status</id>
    <content type="html"><![CDATA[<p>A few weeks ago, I was stuck in an airport for a couple hours. I was flying to San Francisco, and upon arriving to JFK, was informed my flight would be delayed several hours due to a <a href="http://en.wikipedia.org/wiki/Ground_delay_program">ground delay program</a>. A ground delay program is put in place when a particular airport's ability to keep up with traffic is diminished. If your destination airport has a program in place, your takeoff will be delayed until the destination recovers.</p>

<p>A ground delay program is the operations equivalent of shedding load. ATC essentially stops allowing inbound flights to take off to allow for the extra time and care it takes for en-route flights to land safely. This is very similar to <a href="http://techblog.netflix.com/2011/12/making-netflix-api-more-resilient.html">Netflix's implementation of the CircuitBreaker pattern</a>, as it allows the resource having trouble to recover while keeping flights en route at a minimum.</p>

<p>While I was stuck, I found there's a couple really neat tools that can tell you a little about your chances of getting there on time.</p>

<h4>FAA</h4>

<p>The FAA is kind enough to supply information on delays <a href="http://www.fly.faa.gov/flyfaa/usmap.jsp">here</a>. However, I found the information to be presented here a bit disingenuous. The map continued to show my destination airport as green, although flights were actually being held at departure points.</p>

<h4>FlightStats.com</h4>

<p><a href="http://www.flightstats.com">They</a> have a delay index where every destination airport is given a ranking of 0 through 5, 0 being totally on time, and 5 meaning go back to the airport bar and grab another beer. They also very helpfully track whether that index is trending up or down. These relate directly to how long a Ground Delay Program has been running. The longer that ground delay program runs, they more likely that index is going to going to trend up. They also provide a listing of flights to your destination airport that you can use to benchmark how delayed other flights and airlines are.</p>
]]></content>
  </entry>
  
</feed>
